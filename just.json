{
	// Place your snippets for just here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"recipe": {
		"scope": "justfile",
		"prefix": "recipe",
		"body": [
			"[group('$1')]",
			"@$2:",
			"\techo \">> running \\$0\"",
			"\t$CLIPBOARD"
		],
		"description": "base recipe"
	},
	"justfile template": {
		"prefix": "template",
		"isFileTemplate": true,
		"body": [
			"set shell := [\"bash\", \"-c\"]",
			"set positional-arguments",
			"",
			"default: all",
			"all: version build deploy check test clean",
			"clean-all: clean",
			"",
			"[group('$1')]",
			"@version:",
			"\techo \">> running \\$0\"",
			"",
			"[group('$1')]",
			"@build: clean",
			"\techo \">> running \\$0\"",
			"",
			"[group('$1')]",
			"@deploy:",
			"\techo \">> running \\$0\"",
			"",
			"[group('$1')]",
			"@check:",
			"\techo \">> running \\$0\"",
			"",
			"[group('$1')]",
			"@test:",
			"\techo \">> running \\$0\"",
			"",
			"[group('$1')]",
			"@clean:",
			"\techo \">> running \\$0\"",
			"",
		],
		"description": "create a justfile template"
	}
}